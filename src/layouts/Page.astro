---
import "@/styles/global.css";
import Dock from "@layouts/_Dock.astro";
import { format } from "date-fns";

const { title, category, dateVisited, dateModified, datePublished } = Astro.props;

const formatDateModified = format(dateModified, 'MM-dd-yyyy')

console.log({formatDateModified})

const fullTitle = `Cat Travel Guide to ${title}`;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{fullTitle}</title>
	</head>
	<body>
  	<main>
  	 <article>
      <h1>
        <span class="prefix">Cat Travel Guide to</span>
        <span class="title">{title}</span>
      </h1>
  	  <slot />
      <div class="updated">
        <strong class="updatedTitle">Updated On</strong>
        <time class="updatedTime" datetime={dateModified}>{formatDateModified}</time>
      </div>
  	 </article>
    </main>
    <Dock />
	</body>
</html>
<style>
  @import "open-props/media";
  @import "open-props/colors-hsl";

  h1 span {
    display: block;
  }

  h1 .prefix {
    font-size: var(--font-size-fluid-1);
    font-weight: normal;
    font-style: italic;
    transform: skewY(-4deg);
  }

  h1 .title {
    padding-inline-start: var(--size-5);
    color: hsl(46, 100%, 48%);
    font-size: var(--font-size-fluid-3);
    font-weight: bold;
    transform: skewY(-4deg);
  }

  .logo {
    padding-inline: var(--size-2);
    padding-block-start: var(--size-2);
    padding-block-end: var(--size-4);
    position: fixed;
    right: var(--size-2);
    bottom: var(--size-2);
    left: var(--size-2);
    background-color: hsl(var(--gray-2-hsl) / 80%);
    backdrop-filter: blur(12px);
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-2);
  }

  @media (--OSdark) {
    .logo {
      background-color: hsl(var(--gray-10-hsl) / 80%);
    }
  }

  .logoName {
    display: block;
    color: var(--gray-10);
    font-size: var(--font-size-fluid-2);
    transform: skewY(-4deg);
  }

  @media (--OSdark) {
    .logoName {
      color: hsl(46, 100%, 48%);
    }
  }

  .logoDescription {
    display: block;
    margin-inline-start: calc(var(--size-8));
    color: var(--gray-10);
    font-size: var(--font-size-fluid-1);
    font-weight: normal;
    font-style: italic;
    transform: skewY(-4deg);
  }

  @media (--OSdark) {
    .logoDescription {
      color: var(--gray-4);
    }
  }

  main {
    padding-inline: var(--size-3);
    padding-block-start: var(--size-4);
    padding-block-end: var(--size-11);
  }

  @media (--md-n-above) {
    main {
      max-width: var(--size-content-3);
      margin-inline: auto;
      padding-inline: 0;
    }
  }

  /* :global(h1 + p) {
    margin-block-start: var(--size-5);
  } */

  :global(article > p:first-of-type) {
    margin-block-start: var(--size-7);
  }


  :global(p:not(article > p + p)) {
      margin-block-start: var(--size-3);
    }

  :global(article > p + p) {
    margin-block-start: var(--size-3);
  }

  :global(article > h2) {
    margin-block-start: var(--size-4);
    color: hsl(var(--sand-7-hsl));
    font-size: var(--font-size-5);
  }

  @media (--OSdark) {
    :global(article > h2) {
      color: hsl(46, 100%, 48%);
    }
  }

  :global(article > h3) {
    margin-block-start: var(--size-3);
    font-size: var(--font-size-3);
  }

  :global(article > p) {
    color: hsl(var(--gray-9-hsl));
  }

  @media (--OSdark) {
    :global(article > p) {
      color: hsl(var(--gray-3-hsl));
    }
  }

  .updated {
    margin-block-start: var(--size-4);
  }

  .updatedTitle {
    display: block;
    color: hsl(var(--gray-6-hsl));
    letter-spacing: var(--size-1);
    text-transform: uppercase;
  }

</style>

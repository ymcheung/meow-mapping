---
import "@/styles/global.css";
import BaseHead from "./_BaseHead.astro";
import Dock from "@/pages/_Dock.astro";
import { format } from "date-fns";

const locale = Astro.currentLocale;
const isTW = locale === 'tw';

const { title,
        description,
        hasCover,
        cover,
        difficulty,
        feed,
        dateVisited,
        dateModified,
        datePublished
} = Astro.props;

const formatDateModified = format(dateModified, 'MM-dd-yyyy');
const formatDateVisited = format(dateVisited, 'MM-dd-yyyy HH:mm');

const fullTitle = `Cat Spotting in ${title}`;

---

<html lang={isTW ? 'zh-TW' : locale}>
 	<BaseHead
    title={fullTitle}
    description={description}
    hasCover={hasCover}
    cover={cover}
    dateModified={dateModified}
    datePublished={datePublished}
  />
	<body>
  	<main>
  	 <article>
      <h1>
        <span class="prefix">Cat Spotting in</span>
        <span class="title">{title}</span>
      </h1>
      <dl class="meta">
        <div class="metaItem">
          <dt class="metaTitle">Difficulty</dt>
          <dd class="metaDetail capitalize">
            {difficulty.level}
          </dd>
        </div>
        <div class="metaItem">
          <dt class="metaTitle">Feeding</dt>
          <dd class="metaDetail capitalize">
            {feed ? 'Yes' : 'No'}
          </dd>
        </div>
      </dl>
  	  <slot />
      <dl class="meta">
        <div class="metaItem">
          <dt class="metaTitle">Visited</dt>
          <dd class="metaDetail">
            {formatDateVisited}
          </dd>
        </div>
        <div class="metaItem">
          <dt class="metaTitle">Updated</dt>
          <dd class="metaDetail">
            <time datetime={dateModified}>{formatDateModified}</time>
          </dd>
        </div>
      </dl>
  	 </article>
    </main>
    <Dock />
	</body>
</html>
<style>
  @import "open-props/media";
  @import "open-props/colors-hsl";

  h1 span {
    display: block;
  }

  h1 .prefix {
    font-size: var(--font-size-fluid-1);
    color: hsl(var(--gray-7-hsl));
    font-weight: 400;
    font-style: italic;
    transform: skewY(-4deg);
  }

  h1 .title {
    padding-inline-start: var(--size-5);
    color: hsl(var(--choco-7-hsl));
    font-size: var(--font-size-fluid-3);
    font-weight: 700;
    transform: skewY(-4deg);
  }

  @media (--OSdark) {
    h1 .title {
      color: hsl(46, 100%, 48%);
    }

    h1 .prefix {
      color: hsl(var(--gray-4-hsl));
    }
  }

  .logo {
    padding-inline: var(--size-2);
    padding-block-start: var(--size-2);
    padding-block-end: var(--size-4);
    position: fixed;
    right: var(--size-2);
    bottom: var(--size-2);
    left: var(--size-2);
    background-color: hsl(var(--gray-2-hsl) / 80%);
    backdrop-filter: blur(12px);
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-2);
  }

  @media (--OSdark) {
    .logo {
      background-color: hsl(var(--gray-10-hsl) / 80%);
    }
  }

  .logoName {
    display: block;
    color: var(--gray-10);
    font-size: var(--font-size-fluid-2);
    transform: skewY(-4deg);
  }

  @media (--OSdark) {
    .logoName {
      color: hsl(46, 100%, 48%);
    }
  }

  .logoDescription {
    display: block;
    margin-inline-start: calc(var(--size-8));
    color: var(--gray-10);
    font-size: var(--font-size-fluid-1);
    font-weight: 400;
    font-style: italic;
    transform: skewY(-4deg);
  }

  @media (--OSdark) {
    .logoDescription {
      color: var(--gray-4);
    }
  }

  main {
    padding-inline: var(--size-3);
    padding-block-start: var(--size-4);
    padding-block-end: var(--size-11);
  }

  @media (--md-n-above) {
    main {
      max-width: var(--size-content-3);
      margin-inline: auto;
      padding-inline: 0;
    }
  }

  :global(article > h2) {
    margin-block-start: var(--size-4);
    color: hsl(var(--choco-7-hsl));
    font-size: var(--font-size-5);
    font-weight: 600;
  }

  @media (--OSdark) {
    :global(article > h2) {
      color: hsl(46, 100%, 48%);
    }
  }

  :global(article > h2:first-of-type) {
    margin-block-start: var(--size-6);
  }

  :global(article > h3) {
    margin-block-start: var(--size-3);
    color: hsl(var(--gray-8-hsl));
    font-size: var(--font-size-3);
    font-weight: 600;
  }

  @media (--OSdark) {
    :global(article > h3) {
      color: hsl(var(--gray-4-hsl));
    }
  }

  :global(h3 > .icon) {
    display: inline-block;
    margin-inline-end: var(--size-2);
    vertical-align: top;
  }

  @media (--md-n-above) {
    :global(article > h3) {
      position: relative;
    }

    :global(h3 > .icon) {
      position: absolute;
      right: 100%;
    }
  }


  :global(article > p) {
    color: hsl(var(--gray-7-hsl));
  }

  @media (--OSdark) {
    :global(article > p) {
      color: hsl(var(--gray-5-hsl));
    }
  }

  :global(article > p:first-of-type) {
    margin-block-start: var(--size-5);
  }

  :global(p:not(article > p + p)) {
    margin-block-start: var(--size-2);
  }

  :global(article > p + p) {
    margin-block-start: var(--size-3);
  }

  :global(figure) {
    margin-block-start: var(--size-2);
  }

  .updated {
    margin-block-start: var(--size-4);
  }

  .meta {
    display: grid;
    grid: auto / var(--size-12) var(--size-11);
    margin-block-start: var(--size-5);
  }

  /* .metaItem {
    display: contents;
  } */

  .metaTitle {
    color: hsl(var(--gray-6-hsl));
    font-size: var(--font-size-0);
    letter-spacing: var(--size-1);
    text-transform: uppercase;
  }

  .capitalize {
    text-transform: capitalize;
  }

  .metaDetail {
    color: hsl(var(--gray-7-hsl));
  }


  @media (--OSdark) {
    .metaDetail {
      color: hsl(var(--gray-4-hsl));
    }
  }
</style>

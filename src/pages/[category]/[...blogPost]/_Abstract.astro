---
import { z } from 'astro:content';
import type { Locale } from '@/types';
import { getEntry, render } from 'astro:content';
import { transportations as transportationIcon } from '@/consts';
import { postSchema } from '@/schema';
import formatDuration from '@/helpers/formatDuration';
import messages from '@/i18n/messages';

const transportationSchema = postSchema.pick({ transportation: true });

type Props = z.infer<typeof transportationSchema>;

const locale = Astro.currentLocale as Locale;

const isDefaultLocale = locale === 'en';

const { transportation } = Astro.props;

const { duration, unit } = formatDuration(transportation.duration, 'en');

const { blogPost } = Astro.params;
if (!blogPost) return;

const post = await getEntry(isDefaultLocale ? 'posts' : 'postsTw', blogPost);
if (!post) return;

const { headings } = await render(post);

const headingsLv2 = headings.filter(({ depth }) => depth === 2);
---

<div class="abstract">
  <div class="time">
    <strong class="transportationTime">~{duration}</strong>
    <span class="transportationUnit">{unit}</span>
  </div>
  {
    !!transportation.by && (
      <ul class="by">
        {transportation.by.map((by) => {
          const Icon = transportationIcon[by].icon;
          return (
            <li>
              <Icon class="icon" width={28} height={28} />
            </li>
          );
        })}
      </ul>
    )
  }
  <p class="transportationFrom">
    {
      isDefaultLocale && (
        <>
          {messages.en.abstract.transportation.from.prefix}
          {transportation.from.place}
          <br />
        </>
      )
    }{!isDefaultLocale && messages.tw.abstract.transportation.from.prefix}{
      transportation.from.kanji
    }{!isDefaultLocale && messages.tw.abstract.transportation.from.affix}
  </p>
</div>
<div class="tableOfContent">
  <strong class="tableOfContentTitle"
    >{messages[locale].abstract.tableOfContent.title}</strong
  >
  {
    headingsLv2.length > 0 && (
      <ul>
        {headingsLv2.map(({ slug, text }) => (
          <li>
            <a href={`#${slug}`}>{text}</a>
          </li>
        ))}
      </ul>
    )
  }
</div>

<style>
  @import 'open-props/media';
  @import 'open-props/colors-hsl';

  .abstract {
    display: grid;
    grid:
      'time by' auto
      'from from' auto / var(--size-11) 1fr;
    margin-block-start: var(--size-3);
    margin-inline: calc(var(--size-2) * -1);
    padding-inline: var(--size-2);
    padding-block-start: var(--size-2);
    padding-block-end: var(--size-3);
    background-color: hsl(var(--gray-2-hsl) / 80%);
    backdrop-filter: blur(12px);
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-1);
  }

  @media (--OSdark) {
    .abstract {
      background-color: hsl(var(--gray-8-hsl) / 80%);
    }
  }

  @media (--md-n-above) {
    .abstract {
      margin-inline: calc(var(--size-3) * -1);
      padding-inline: var(--size-3);
    }
  }

  .time {
    grid-area: time;
  }

  .transportationTime {
    color: hsl(var(--gray-7-hsl));
    font-size: var(--font-size-5);
  }

  @media (--OSdark) {
    .transportationTime {
      color: hsl(var(--gray-2-hsl));
    }
  }

  .transportationUnit {
    color: hsl(var(--gray-6-hsl));
    font-size: var(--font-size-1);
  }

  .by {
    display: grid;
    grid: auto / repeat(auto-fit, var(--size-8));
    align-items: center;
    justify-content: end;
    grid-area: by;
    padding-inline-start: 0;
    padding-inline-end: var(--size-2);
  }

  @media (--md-n-above) {
    .by {
      padding-inline-end: 0;
    }
  }

  .by li {
    padding-inline-start: 0;
    list-style-type: none;
  }

  .by .icon {
    margin-inline-start: auto;
    color: hsl(var(--gray-6-hsl));
  }

  @media (--OSdark) {
    .by .icon {
      color: hsl(var(--gray-5-hsl));
    }
  }

  .transportationFrom {
    grid-area: from;
    color: hsl(var(--gray-7-hsl));
    font-size: var(--font-size-1);
  }

  @media (--OSdark) {
    .transportationFrom {
      color: hsl(var(--gray-5-hsl));
    }
  }

  .tableOfContent {
    display: none;
  }

  @media (--md-n-above) {
    .tableOfContent {
      display: block;
      width: var(--size-13);
      position: relative;
      z-index: var(--layer-1);
      margin-inline-start: auto;
      margin-inline-end: calc(var(--size-3) * -1);
      margin-block-start: calc(var(--size-8) * -1);
      padding-inline: var(--size-3);
      padding-block: var(--size-2);
      background-color: hsl(var(--gray-2-hsl));
      border-radius: var(--radius-3);
      box-shadow: var(--shadow-1);
    }
  }

  @media (--OSdark) {
    .tableOfContent {
      background-color: hsl(var(--gray-8-hsl));
    }
  }

  .tableOfContentTitle {
    color: hsl(var(--gray-7-hsl));
  }

  @media (--OSdark) {
    .tableOfContentTitle {
      color: hsl(var(--gray-5-hsl));
    }
  }

  .tableOfContent ul {
    display: grid;
    row-gap: var(--size-2);
    margin-block-start: var(--size-2);
    padding-inline-start: 0;
  }

  .tableOfContent ul li {
    padding-inline-start: 0;
    list-style-type: none;
  }

  .tableOfContent a {
    color: hsl(var(--gray-7-hsl));
    text-decoration-line: underline;
    text-decoration-color: hsl(var(--gray-5-hsl));
    text-decoration-style: solid;
  }

  .tableOfContent a:hover {
    text-decoration-color: hsl(var(--gray-7-hsl));
  }

  @media (--OSdark) {
    .tableOfContent a {
      color: hsl(var(--gray-2-hsl));
      text-decoration-color: hsl(var(--gray-7-hsl));
    }

    .tableOfContent a:hover {
      text-decoration-color: hsl(var(--gray-5-hsl));
    }
  }
</style>

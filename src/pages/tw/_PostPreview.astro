---
import { format } from 'date-fns';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { Locale } from '@/types';
const locale = Astro.currentLocale as Locale;

const { title, categorySlug, postId, from, dateVisited } = Astro.props;

const formatDateVisited = format(dateVisited, 'yyyy-MM-dd');

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/**/og.jpg'
);
const imagePath = `/src/assets/${postId}/og.jpg`;
const imageModule = images[imagePath];
const image = imageModule ? (await imageModule()).default : undefined;
---

<li>
  <figure class="card">
    {
      image && (
        <div class="cover">
          <Image
            class="coverImage"
            src={image}
            width={image.width}
            height={image.height}
            alt={title}
          />
        </div>
      )
    }
    <div class="cardContent">
      <strong class="title">{title}</strong>
      <span class="description">從{from.kanji}出發 ({formatDateVisited})</span>
    </div>
    <a
      class="link"
      href={`${getRelativeLocaleUrl(locale, `${categorySlug}/${postId}`)}`}></a>
  </figure>
</li>

<style>
  @import 'open-props/media';

  li {
    max-inline-size: unset;
    padding-inline-start: 0;
    list-style-type: none;
    transform: skewY(-2deg);
  }

  li + li {
    margin-block-start: var(--size-4);
  }

  .card {
    grid: auto / var(--size-11) 1fr;
    place-items: unset;
    column-gap: var(--size-3);
    position: relative;
  }

  @media (--md-n-above) {
    .card {
      grid: auto / var(--size-12) 1fr;
    }
  }

  .cover {
    overflow: hidden;
    position: relative;
    aspect-ratio: 1.5;
    border-radius: var(--radius-3);
  }

  .coverImage {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
  }

  @media (--md-n-above) {
    .cardContent {
      margin-inline-end: calc(var(--size-3) * -1);
    }
  }

  .link {
    display: block;
    position: absolute;
    inset: 0;
    z-index: 1;
  }

  @media (--md-n-above) {
    .link {
      left: calc(var(--size-8) * -1);
    }
  }

  .cta {
    display: inline-block;
    overflow: hidden;
    width: 0;
    height: 40px;
    margin-inline-start: var(--size-1);
    background-color: hsl(var(--sand-7-hsl));
    vertical-align: text-top;
  }

  @media (--OSdark) {
    .cta {
      background-color: hsl(46, 100%, 48%);
    }
  }

  .title {
    display: block;
    position: relative;
    margin-block-start: var(--size-00);
    color: hsl(var(--choco-7-hsl));
    font-size: var(--font-size-fluid-2);
    line-height: var(--font-lineheight-1);
    transition: padding-inline-start 0.3s cubic-bezier(0.32, 0, 0.67, 0);
  }

  @media (--OSdark) {
    .title {
      color: hsl(46, 100%, 48%);
    }
  }

  /*.title::before,
  .title::after {
    width: max-content;
    content: 'Read';
    padding-inline: var(--size-2);
    padding-block: var(--size-1);
    color: hsl(var(--gray-5-hsl));
    font-size: var(--font-size-fluid-1);
    background-color: hsl(var(--gray-1-hsl));
    transition:
      right 0.3s cubic-bezier(0.32, 0, 0.67, 0),
      background-color 0.3s cubic-bezier(0.32, 0, 0.67, 0);
  }*/

  @media (--OSdark) {
    .title::before,
    .title::after {
      color: hsl(var(--sand-7-hsl));
      background-color: hsl(var(--gray-8-hsl));
    }
  }

  .title::before {
    display: none;
  }

  .title::after {
    display: inline-block;
    margin-inline-start: var(--size-2);
    vertical-align: text-bottom;
  }

  @media (--md-n-above) {
    .title::before {
      display: block;
      position: absolute;
      top: 6px;
      right: calc(100% + var(--size-2));
    }

    .title::after {
      display: none;
    }
  }

  .link:hover + .title {
    padding-inline-start: var(--size-3);
    transition: padding-inline-start 0.3s cubic-bezier(0.32, 0, 0.67, 0);
  }

  .link:hover + .title::before {
    color: hsl(var(--gray-0-hsl));
    background-color: hsl(var(--sand-7-hsl));
    transition:
      color 0.3s cubic-bezier(0.32, 0, 0.67, 0),
      background-color 0.3s cubic-bezier(0.32, 0, 0.67, 0);
  }

  @media (--OSdark) {
    .link:hover + .title::before {
      color: hsl(var(--gray-9-hsl));
      background-color: hsl(46, 100%, 48%);
    }
  }

  @media (--md-n-above) {
    .link:hover + .title::before {
      right: calc(100% - var(--size-2));
      transition: right 0.3s cubic-bezier(0.32, 0, 0.67, 0);
    }
  }

  .description {
    display: inline-block;
    color: hsl(var(--gray-7-hsl));
    font-size: var(--font-size-fluid-1);
  }

  @media (--OSdark) {
    .description {
      color: hsl(var(--gray-5-hsl));
    }
  }
</style>
